{
  "workflow": {
    "unique_name": "definition_workflow_01SBR0JK0J9RK4L7zbKYW1B1ZeKZeoOjNbw",
    "name": "Cohesity Helios: Get Anomalous Objects v1.2",
    "title": "Cohesity Helios: Get Anomalous Objects v1.2",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "HeliosAlertsArray",
          "type": "datatype.string",
          "description": "This variable wills store all the Helios anomalous object in a JSON object",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01SBS2EY211125J8Qt68lXInk8rdsrjoTF1",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.secure_string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "HeliosAPIKey",
          "type": "datatype.secure_string",
          "description": "Helios API Key to Authenticate against Cohesity Helios",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01SCMAS4B0WO21tFjuMmjG0OXYDqro8mWfm",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "atomic_group": "Cohesity Helios",
        "is_atomic": true
      },
      "delete_workflow_instance": false,
      "description": "This atomic gets list of all anomalous objects identified by Cohesity Helios",
      "display_name": "Cohesity Helios: Get Anomalous Objects v1.2",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "target_type": "web-service.endpoint",
        "specify_on_workflow_start": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_01SBR0JM6TTLJ37iN25QmNLGiHg3f6hxryH",
        "name": "HTTP Request",
        "title": "Get All Cohesity Helios Anomalous Objects",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "content_type": "application/json",
          "continue_on_error_status_code": true,
          "continue_on_failure": false,
          "custom_headers": [
            {
              "name": "apiKey",
              "value": "$workflow.definition_workflow_01SBR0JK0J9RK4L7zbKYW1B1ZeKZeoOjNbw.input.variable_workflow_01SCMAS4B0WO21tFjuMmjG0OXYDqro8mWfm$"
            }
          ],
          "description": "API call to get all anomalous objects identified by Cohesity Helios",
          "display_name": "Get All Cohesity Helios Anomalous Objects",
          "method": "GET",
          "relative_url": "mcm/alerts?alertCategoryList=kSecurity\u0026alertStateList=kOpen\u0026maxAlerts=1000",
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "use_workflow_target": true
          },
          "user_agent": "SecureX-v1.1"
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01SCMP5SRYK0U6RnRQOf3z0qaNTorWso9n7",
        "name": "Condition Block",
        "title": "Condition Block",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Condition Block",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01SCMP5SXQ4G34qJoKvKWViGiEbjdtvjwwb",
            "name": "Condition Branch",
            "title": "200/OK",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01SBR0JM6TTLJ37iN25QmNLGiHg3f6hxryH.output.status_code$",
                "operator": "eq",
                "right_operand": 200
              },
              "continue_on_failure": false,
              "display_name": "200/OK",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01SBR11J8G1202Q4VrWNYT65uLPZqo1JLhW",
                "name": "Execute Python Script",
                "title": "Massage Cohesity Alert Object",
                "type": "python3.script",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "description": "This python block extracts the needed information from Cohesity Helios alerts object to create SecureX Indient and passes it at a JSON object",
                  "display_name": "Massage Cohesity Alert Object",
                  "script": "'''\nSecureX orchestration workflow python script used to get anomalous objects detected\nin the last n hours from Cohesity Helios and push to SecureX private intelligence\nScript usage:\npython push_ransonware_data.py \u003cclient_id\u003e \u003cclient_password\u003e \u003chelios_api_key\u003e \u003cn\u003e\nclient_id: Threat Response API client id\nclient_password: Threat Response API client password\nhelios_api_key: Cohesity Helios API key\nn: number of hours, used to get anomalous objects detected in the last n hours\n'''\nimport argparse\nimport datetime\nimport time\nimport json\nimport requests\nimport ast\nimport sys\nimport datetime\n##### Cisco Functions #####\n\n\ndef get_property_dict(property_list):\n    '''\n    get property dictionary from list of property dicts\n    with keys, values\n    :param property_list:\n    :return:\n    '''\n    property_dict = {}\n    for property in property_list:\n        property_dict[property['key']] = property['value']\n    return property_dict\n\n\ndef main(args):\n    global massaged_alerts_array\n    alerts = ast.literal_eval(args.alerts)\n    for alert in alerts:\n        if(alert['alertCode'] == 'CE01516011'):\n            property_dict = get_property_dict(alert['propertyList'])\n            external_id = property_dict.get('object', '') + '___' +\\\n                property_dict.get('entityId', '') + '___' +\\\n                property_dict.get('source', '') + '___' +\\\n                property_dict.get('cluster', '') + '___' +\\\n                property_dict.get('cid', '')\n            temp_alert = {\n                \"external_id\": external_id,\n                \"title\": \"Cohesity Helios: \" + property_dict.get(\"object\", \"\"),\n                \"object\": property_dict.get('object', ''),\n                \"start_time\": datetime.datetime.utcfromtimestamp(float(alert['firstTimestampUsecs']) / 1000000).isoformat(),\n                \"end_time\": datetime.datetime.utcfromtimestamp(float(alert['latestTimestampUsecs']) / 1000000).isoformat(),\n                \"incident_description\": \"Anomalous object from Cohesity\"\n                \" Helios. The object is under source \\'\" +\n                property_dict.get(\"source\", \"\") +\n                \"\\' on cluster \\'\" + property_dict.get(\"cluster\", \"\") + \"\\'\" + \"\\n\" +\n                \"# Alert Info \\n\\n\" +\n                \"*Alert Name* : \" + alert['alertDocument']['alertName'] + \"\\n\\n\" +\n                \"*Alert Description* : \" + alert['alertDocument']['alertDescription'] + \"\\n\\n\" +\n                \"*Alert Cause* : \" + alert['alertDocument']['alertCause'] + \"\\n\\n\" +\n                \"*Alert Help Text* : \" +\n                alert['alertDocument']['alertHelpText'],\n                \"source_name\": property_dict.get('source', ''),\n                \"sighting_description\": \"Anomalous object from Cohesity\"\n                \" Helios. The object is under source \\'\" +\n                property_dict.get(\"source\", \"\") +\n                \"\\' on cluster \\'\" +\n                property_dict.get(\"cluster\", \"\") + \"\\'\",\n                \"observables\": [\n                    {\n                        \"type\": \"hostname\",\n                        \"value\": property_dict.get(\"object\", \"\")\n                    }\n                ],\n            }\n            massaged_alerts_array.append(temp_alert)\n\n\nparser = argparse.ArgumentParser(\n    description=\"Arguments to get anomalous objects from Helios\"\n                \" and push to private intelligence\")\nparser.add_argument(\"alerts\", help=\"All Alerts Array\")\nargs = parser.parse_args()\n\n\nmassaged_alerts_array = []\n\nmain(args)\nalerts_array = json.dumps(massaged_alerts_array)\n\nprint(alerts_array)",
                  "script_arguments": [
                    "$activity.definition_activity_01SBR0JM6TTLJ37iN25QmNLGiHg3f6hxryH.output.response_body$"
                  ],
                  "script_queries": [
                    {
                      "script_query": "alerts_array",
                      "script_query_name": "ALERTS",
                      "script_query_type": "string"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01SBRQ5CHEVKM1u4p0o836mm4Gs5oKamg7N",
                "name": "Set Variables",
                "title": "Set Helios Alerts JSON object",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Set Helios Alerts JSON object",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_01SBR0JK0J9RK4L7zbKYW1B1ZeKZeoOjNbw.output.variable_workflow_01SBS2EY211125J8Qt68lXInk8rdsrjoTF1$",
                      "variable_value_new": "$activity.definition_activity_01SBR11J8G1202Q4VrWNYT65uLPZqo1JLhW.output.script_queries.ALERTS$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_01SCMP5T4UAS71d4QsK3Gk08EF68q8GI96i",
            "name": "Condition Branch",
            "title": "Anything Else",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01SBR0JM6TTLJ37iN25QmNLGiHg3f6hxryH.output.status_code$",
                "operator": "ne",
                "right_operand": 200
              },
              "continue_on_failure": false,
              "description": "Response code other than 200",
              "display_name": "Anything Else",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01SCMPX4ZR2LT4htVGPWaoRQWNC5WaSKRrK",
                "name": "Completed",
                "title": "Failed",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "display_name": "Failed",
                  "result_message": "Status Code; $activity.definition_activity_01SBR0JM6TTLJ37iN25QmNLGiHg3f6hxryH.output.status_code$\nError Message: $activity.definition_activity_01SBR0JM6TTLJ37iN25QmNLGiHg3f6hxryH.output.response_body$",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      }
    ],
    "categories": [
      "category_01EI33LMFFL7N5eTQLsOOJIrxdlSOHb7r3r",
      "category_01NE1I82BDS333i4eneE2Wy9YOAGOO2SgOD"
    ]
  },
  "categories": {
    "category_01EI33LMFFL7N5eTQLsOOJIrxdlSOHb7r3r": {
      "unique_name": "category_01EI33LMFFL7N5eTQLsOOJIrxdlSOHb7r3r",
      "name": "SecureX",
      "title": "SecureX",
      "type": "basic.category",
      "base_type": "category",
      "category_type": "custom",
      "object_type": "category"
    },
    "category_01NE1I82BDS333i4eneE2Wy9YOAGOO2SgOD": {
      "unique_name": "category_01NE1I82BDS333i4eneE2Wy9YOAGOO2SgOD",
      "name": "incident",
      "title": "incident",
      "type": "basic.category",
      "base_type": "category",
      "category_type": "custom",
      "object_type": "category"
    }
  }
}