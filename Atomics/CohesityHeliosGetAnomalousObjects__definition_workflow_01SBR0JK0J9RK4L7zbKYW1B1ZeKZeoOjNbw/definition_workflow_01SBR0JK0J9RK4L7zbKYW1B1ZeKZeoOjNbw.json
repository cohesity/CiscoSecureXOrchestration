{
  "workflow": {
    "unique_name": "definition_workflow_01SBR0JK0J9RK4L7zbKYW1B1ZeKZeoOjNbw",
    "name": "[Atomic] Cohesity Helios: Get Anomalous Objects v1.2",
    "title": "[Atomic] Cohesity Helios: Get Anomalous Objects v1.2",
    "type": "generic.workflow",
    "base_type": "workflow",
    "variables": [
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "",
          "scope": "output",
          "name": "HeliosAlertsArray",
          "type": "datatype.string",
          "description": "This variable wills store all the Helios anomalous object in a JSON object",
          "is_required": false,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01SBS2EY211125J8Qt68lXInk8rdsrjoTF1",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.secure_string",
        "properties": {
          "value": "",
          "scope": "input",
          "name": "HeliosAPIKey",
          "type": "datatype.secure_string",
          "description": "Helios API Key to Authenticate against Cohesity Helios",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01SCMAS4B0WO21tFjuMmjG0OXYDqro8mWfm",
        "object_type": "variable_workflow"
      },
      {
        "schema_id": "datatype.string",
        "properties": {
          "value": "1000",
          "scope": "input",
          "name": "HeliosRansomwareAlertsFilter",
          "type": "datatype.string",
          "description": "Cohesity Helios Ransomware Alerts Filter. Specifies the time in hours. This value is used to decide that anomalies created in the last X hours will be fetched. Example All Anomalies from last 1000 hours will be pulled. ",
          "is_required": true,
          "is_invisible": false
        },
        "unique_name": "variable_workflow_01SL46I3SN6AB1MLXbzT2U2MiTNu5tvSTqP",
        "object_type": "variable_workflow"
      }
    ],
    "properties": {
      "atomic": {
        "atomic_group": "Cohesity Helios",
        "is_atomic": true
      },
      "delete_workflow_instance": false,
      "description": "This atomic gets list of all anomalous objects identified by Cohesity Helios\n\nTarget: HTTP endpoint for \"Cohesity Helios\"\n\nAccount Key: HTTP API Key of Cohesity Helios User\n\nSteps:\n[] Request the Cohesity Helios to get a list of all anamolous objects from current time to \n[] Check if the API request succeeded:\n[]\u003e If it did, attempt to extract the list of anamolous objects into an array and sets the output variable HeliosAlertsArray\n[]\u003e If it didn't, output failed",
      "display_name": "[Atomic] Cohesity Helios: Get Anomalous Objects v1.2",
      "runtime_user": {
        "target_default": true
      },
      "target": {
        "target_type": "web-service.endpoint",
        "target_id": "definition_target_01NUXYJSHWS6R5qkNnOhUAZKHNF4i5nH4ft",
        "execute_on_workflow_target": true
      }
    },
    "object_type": "definition_workflow",
    "actions": [
      {
        "unique_name": "definition_activity_01SL45BKBLK294KnFrol2QGu500JjZMM0sD",
        "name": "Execute Python Script",
        "title": "Get Start Time for Alerts in Epoch",
        "type": "python3.script",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "continue_on_failure": false,
          "description": "Get Start Time for Alerts in Epoch. This start time defines the time starting from which the alerts will be sent",
          "display_name": "Get Start Time for Alerts in Epoch",
          "script": "import time\nimport sys\n\nstartDateUsecs = int((time.time() - int(sys.argv[1]) * 60 * 60) * 1000000)",
          "script_arguments": [
            "$workflow.definition_workflow_01SBR0JK0J9RK4L7zbKYW1B1ZeKZeoOjNbw.input.variable_workflow_01SL46I3SN6AB1MLXbzT2U2MiTNu5tvSTqP$"
          ],
          "script_queries": [
            {
              "script_query": "startDateUsecs",
              "script_query_name": "startDateUsecs",
              "script_query_type": "integer"
            }
          ],
          "skip_execution": false
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01SBR0JM6TTLJ37iN25QmNLGiHg3f6hxryH",
        "name": "HTTP Request",
        "title": "Get All Cohesity Helios Anomalous Objects",
        "type": "web-service.http_request",
        "base_type": "activity",
        "properties": {
          "action_timeout": 180,
          "allow_auto_redirect": true,
          "allow_headers_redirect": false,
          "content_type": "application/json",
          "continue_on_error_status_code": true,
          "continue_on_failure": false,
          "custom_headers": [
            {
              "name": "apiKey",
              "value": "$workflow.definition_workflow_01SBR0JK0J9RK4L7zbKYW1B1ZeKZeoOjNbw.input.variable_workflow_01SCMAS4B0WO21tFjuMmjG0OXYDqro8mWfm$"
            }
          ],
          "description": "API call to get all anomalous objects identified by Cohesity Helios",
          "display_name": "Get All Cohesity Helios Anomalous Objects",
          "method": "GET",
          "relative_url": "mcm/alerts?alertCategoryList=kSecurity\u0026alertStateList=kOpen\u0026maxAlerts=$global.variable_01OD0GHYPQ8JJ3cQio7pfjoqIUwrasIA2jr.global.variable_01OD0GHYPQ8JJ3cQio7pfjoqIUwrasIA2jr$\u0026startDateUsecs=$activity.definition_activity_01SL45BKBLK294KnFrol2QGu500JjZMM0sD.output.script_queries.startDateUsecs$",
          "runtime_user": {
            "target_default": true
          },
          "skip_execution": false,
          "target": {
            "override_workflow_target": true,
            "target_id": "definition_target_01NUXYJSHWS6R5qkNnOhUAZKHNF4i5nH4ft"
          },
          "user_agent": "SecureX-v1.3"
        },
        "object_type": "definition_activity"
      },
      {
        "unique_name": "definition_activity_01SCMP5SRYK0U6RnRQOf3z0qaNTorWso9n7",
        "name": "Condition Block",
        "title": "Condition Block",
        "type": "logic.if_else",
        "base_type": "activity",
        "properties": {
          "continue_on_failure": false,
          "display_name": "Condition Block",
          "skip_execution": false
        },
        "object_type": "definition_activity",
        "blocks": [
          {
            "unique_name": "definition_activity_01SCMP5SXQ4G34qJoKvKWViGiEbjdtvjwwb",
            "name": "Condition Branch",
            "title": "200/OK",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01SBR0JM6TTLJ37iN25QmNLGiHg3f6hxryH.output.status_code$",
                "operator": "eq",
                "right_operand": 200
              },
              "continue_on_failure": false,
              "display_name": "200/OK",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01SBR11J8G1202Q4VrWNYT65uLPZqo1JLhW",
                "name": "Execute Python Script",
                "title": "Massage Cohesity Alert Object",
                "type": "python3.script",
                "base_type": "activity",
                "properties": {
                  "action_timeout": 180,
                  "continue_on_failure": false,
                  "description": "This python block extracts the needed information from Cohesity Helios alerts object to create SecureX Indient and passes it at a JSON object",
                  "display_name": "Massage Cohesity Alert Object",
                  "script": "'''\nMassage Helios Alerts array to add required fields\n'''\nimport argparse\nimport datetime\nimport time\nimport json\nimport requests\nimport ast\nimport sys\nimport datetime\n\ndef get_property_dict(property_list):\n    '''\n    get property dictionary from list of property dicts\n    with keys, values\n    :param property_list:\n    :return:\n    '''\n    property_dict = {}\n    for property in property_list:\n        property_dict[property['key']] = property['value']\n    return property_dict\n\n\ndef main(args):\n    global massaged_alerts_array\n    alerts = ast.literal_eval(args.alerts)\n    for alert in alerts:\n        if(alert['alertCode'] == 'CE01516011' and alert['severity'] == 'kCritical' and alert['alertState'] == 'kOpen'):\n            property_dict = get_property_dict(alert['propertyList'])\n            external_id = property_dict.get('object', '') + '___' +\\\n                property_dict.get('entityId', '') + '___' +\\\n                property_dict.get('source', '') + '___' +\\\n                property_dict.get('cluster', '') + '___' +\\\n                property_dict.get('cid', '')\n            temp_alert = {\n                \"shortDescription\": \"[CiscoSecureX]Anomalous object \\'\" + property_dict.get(\"object\", \"\") +\n                \"\\' from Cohesity. Source: \\'\" +\n                property_dict.get(\"source\", \"\") + \"\\' Cluster: \\'\" +\n                property_dict.get(\"cluster\", \"\") + \"\\'\",\n                \"description\": alert.get('alertDocument')['alertName'] + \". \\n\" +\n                alert.get('alertDocument')['alertDescription'] + \". \\n\" +\n                alert.get('alertDocument')['alertCause'] + \". \\n\" +\n                alert.get('alertDocument')['alertHelpText'],\n                \"alert_id\": alert['id'],\n                \"entity_id\": property_dict.get(\"entityId\", \"\"),\n                \"job_id\": property_dict.get(\"jobId\", \"\"),\n                \"parent_id\": property_dict.get(\"parentId\", \"\"),\n                \"job_instance_id\": property_dict.get(\"jobInstanceId\", \"\"),\n                \"cluster_incarnation_id\": property_dict.get(\"clusterIncarnationId\", \"\"),\n                \"object_id\": property_dict.get(\"objectId\", \"\"),\n                \"job_start_time_usecs\": property_dict.get(\"jobStartTimeUsecs\", \"\"),\n                \"cluster_id\": property_dict.get(\"cid\", \"\"),\n                \"external_id\": external_id,\n                \"title\": \"Cohesity Helios: \" + property_dict.get(\"object\", \"\"),\n                \"object\": property_dict.get('object', ''),\n                \"start_time\": datetime.datetime.utcfromtimestamp(float(alert['firstTimestampUsecs']) / 1000000).isoformat(),\n                \"end_time\": datetime.datetime.utcfromtimestamp(float(alert['latestTimestampUsecs']) / 1000000).isoformat(),\n                \"incident_description\": \"Anomalous object from Cohesity \" +\n                \" Helios. The object is under source \\'\" +\n                property_dict.get(\"source\", \"\") +\n                \"\\' on cluster \\'\" + property_dict.get(\"cluster\", \"\") + \"\\'\" + \"\u003cbr\u003e\" +\n                \"# Alert Info\" + \"\u003cbr\u003e\" +\n                \"* *Alert Name* : \" + alert['alertDocument']['alertName'] + \"\u003cbr\u003e\" +\n                \"* *Alert Description* : \" + alert['alertDocument']['alertDescription'] + \"\u003cbr\u003e\" +\n                \"* *Alert Cause* : \" + alert['alertDocument']['alertCause'] + \"\u003cbr\u003e\" +\n                \"* *Alert Help Text* : \" + alert['alertDocument']['alertHelpText'],\n                \"source_name\": property_dict.get('source', ''),\n                \"sighting_description\": \"Anomalous object from Cohesity\"\n                \" Helios. The object is under source \\'\" +\n                property_dict.get(\"source\", \"\") +\n                \"\\' on cluster \\'\" +\n                property_dict.get(\"cluster\", \"\") + \"\\'\",\n                \"observables\": [\n                    {\n                        \"type\": \"hostname\",\n                        \"value\": property_dict.get(\"object\", \"\")\n                    }\n                ],\n            }\n            massaged_alerts_array.append(temp_alert)\n\nparser = argparse.ArgumentParser(\n    description=\"Arguments to get anomalous objects from Helios\"\n                \" and push to private intelligence\")\nparser.add_argument(\"alerts\", help=\"All Alerts Array\")\n\nargs = parser.parse_args()\nmassaged_alerts_array = []\n\nmain(args)\nalerts_array = json.dumps(massaged_alerts_array)",
                  "script_arguments": [
                    "$activity.definition_activity_01SBR0JM6TTLJ37iN25QmNLGiHg3f6hxryH.output.response_body$"
                  ],
                  "script_queries": [
                    {
                      "script_query": "alerts_array",
                      "script_query_name": "ALERTS",
                      "script_query_type": "string"
                    }
                  ],
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              },
              {
                "unique_name": "definition_activity_01SBRQ5CHEVKM1u4p0o836mm4Gs5oKamg7N",
                "name": "Set Variables",
                "title": "Set Helios Alerts JSON object",
                "type": "core.set_multiple_variables",
                "base_type": "activity",
                "properties": {
                  "continue_on_failure": false,
                  "display_name": "Set Helios Alerts JSON object",
                  "skip_execution": false,
                  "variables_to_update": [
                    {
                      "variable_to_update": "$workflow.definition_workflow_01SBR0JK0J9RK4L7zbKYW1B1ZeKZeoOjNbw.output.variable_workflow_01SBS2EY211125J8Qt68lXInk8rdsrjoTF1$",
                      "variable_value_new": "$activity.definition_activity_01SBR11J8G1202Q4VrWNYT65uLPZqo1JLhW.output.script_queries.ALERTS$"
                    }
                  ]
                },
                "object_type": "definition_activity"
              }
            ]
          },
          {
            "unique_name": "definition_activity_01SCMP5T4UAS71d4QsK3Gk08EF68q8GI96i",
            "name": "Condition Branch",
            "title": "Anything Else",
            "type": "logic.condition_block",
            "base_type": "activity",
            "properties": {
              "condition": {
                "left_operand": "$activity.definition_activity_01SBR0JM6TTLJ37iN25QmNLGiHg3f6hxryH.output.status_code$",
                "operator": "ne",
                "right_operand": 200
              },
              "continue_on_failure": false,
              "description": "Response code other than 200",
              "display_name": "Anything Else",
              "skip_execution": false
            },
            "object_type": "definition_activity",
            "actions": [
              {
                "unique_name": "definition_activity_01SCMPX4ZR2LT4htVGPWaoRQWNC5WaSKRrK",
                "name": "Completed",
                "title": "Failed",
                "type": "logic.completed",
                "base_type": "activity",
                "properties": {
                  "completion_type": "failed-completed",
                  "continue_on_failure": false,
                  "display_name": "Failed",
                  "result_message": "Status Code; $activity.definition_activity_01SBR0JM6TTLJ37iN25QmNLGiHg3f6hxryH.output.status_code$\nError Message: $activity.definition_activity_01SBR0JM6TTLJ37iN25QmNLGiHg3f6hxryH.output.response_body$",
                  "skip_execution": false
                },
                "object_type": "definition_activity"
              }
            ]
          }
        ]
      }
    ],
    "categories": [
      "category_01EI33LMFFL7N5eTQLsOOJIrxdlSOHb7r3r",
      "category_01NE1I82BDS333i4eneE2Wy9YOAGOO2SgOD"
    ]
  },
  "categories": {
    "category_01EI33LMFFL7N5eTQLsOOJIrxdlSOHb7r3r": {
      "unique_name": "category_01EI33LMFFL7N5eTQLsOOJIrxdlSOHb7r3r",
      "name": "SecureX",
      "title": "SecureX",
      "type": "basic.category",
      "base_type": "category",
      "category_type": "custom",
      "object_type": "category"
    },
    "category_01NE1I82BDS333i4eneE2Wy9YOAGOO2SgOD": {
      "unique_name": "category_01NE1I82BDS333i4eneE2Wy9YOAGOO2SgOD",
      "name": "incident",
      "title": "incident",
      "type": "basic.category",
      "base_type": "category",
      "category_type": "custom",
      "object_type": "category"
    }
  },
  "targets": {
    "definition_target_01NUXYJSHWS6R5qkNnOhUAZKHNF4i5nH4ft": {
      "unique_name": "definition_target_01NUXYJSHWS6R5qkNnOhUAZKHNF4i5nH4ft",
      "name": "Cohesity Helios",
      "title": "Cohesity Helios",
      "type": "web-service.endpoint",
      "base_type": "target",
      "object_type": "definition_target",
      "properties": {
        "disable_certificate_validation": true,
        "display_name": "Cohesity Helios",
        "host": "helios.cohesity.com",
        "ignore_proxy": false,
        "no_runtime_user": true,
        "path": "/",
        "port": 443,
        "protocol": "https"
      }
    }
  },
  "variables": {
    "variable_01OD0GHYPQ8JJ3cQio7pfjoqIUwrasIA2jr": {
      "unique_name": "variable_01OD0GHYPQ8JJ3cQio7pfjoqIUwrasIA2jr",
      "properties": {
        "value": "1000",
        "scope": "global",
        "name": "Cohesity Helios Ransomware Alerts Filter",
        "type": "datatype.string",
        "description": "Specifies the number of hours. This is used to filter alerts detected in the last specified number of hours",
        "is_required": false,
        "is_invisible": false
      },
      "object_type": "variable"
    }
  }
}